
trigger:
  none
  
name: Azure Pipelines
variables:
  python.version: '3.7.6'
  terraform.version: '0.13.4'
stages:
  - stage: Provisioning
    displayName: Provisioning
    jobs: 
    - job: ProvisioningAppService
      displayName: Provisioning AppService
      steps:
      - task: InstallSSHKey@0
        inputs:
          knownHostsEntry: 'default'
          sshKeySecureFile: 'id_rsa'
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            ls /home/smatest/work/
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        displayName: Install Terraform
        inputs:
          terraformVersion: '0.13.4'
      - task: TerraformTaskV1@0
        displayName: Terraform Init
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: 'UdacityQualityReleasesSC'
          backendAzureRmResourceGroupName: 'RG-SUPPORT'
          backendAzureRmStorageAccountName: 'sageneralsupport'
          backendAzureRmContainerName: 'terraform-state'
          backendAzureRmKey: 'ensuring-quality-releases.tfstate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
      - task: TerraformTaskV1@0
        displayName: Terraform Plan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
          environmentServiceNameAzureRM: 'UdacityQualityReleasesSC'
      - task: TerraformTaskV1@0
        displayName: Terraform Validate and Apply  
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
          environmentServiceNameAzureRM: 'UdacityQualityReleasesSC'

  - stage: Build
    displayName: Build
    jobs:
    - job: Build
      pool:
        name: Hosted Ubuntu 1604
      steps:
    # Needed for Terraform VM deployment
    # - task: InstallSSHKey@0
    #   inputs:
    #     knownHostsEntry: 'KNOWN_HOSTS_STRING'
    #     sshPublicKey: 'PUBLIC_KEY'
    #     sshKeySecureFile: 'id_rsa'
      - task: ArchiveFiles@2
        displayName: 'Archive FakeRestAPI'
        inputs:
          rootFolderOrFile: 'path/to/fakerestapi'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
      - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
        displayName: 'Upload Package'
        artifact: drop-fakerestapi
  - stage:
    jobs:
    - deployment: FakeRestAPI
      pool:
        vmImage: 'Ubuntu-16.04'
      environment: 'TEST'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureWebApp@1
              displayName: 'Deploy Azure Web App'
              inputs:
                azureSubscription: ''
                appName: ''
                appType: webApp
                package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path


